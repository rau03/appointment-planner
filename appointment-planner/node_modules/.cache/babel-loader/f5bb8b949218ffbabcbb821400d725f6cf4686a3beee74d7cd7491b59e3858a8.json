{"ast":null,"code":"var _jsxFileName = \"/Users/christopherrau/appointment planner/appointment-planner/src/components/contactForm/ContactForm.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactForm = _ref => {\n  let {\n    name,\n    setName,\n    phone,\n    setPhone,\n    email,\n    setEmail,\n    handleSubmit\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      placeholder: \"Name\",\n      onChange: e => {\n        let name = e.target.value.toLowerCase();\n        const words = name.split(\" \");\n        for (let i = 0; i < words.length; i++) {\n          if (words[i]) {\n            words[i] = words[i] = words[i][0].toUpperCase() + words[i].substr(1 | undefined);\n          }\n        }\n        name = words.join(\" \");\n        setName(name);\n      },\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      value: phone,\n      placeholder: \"Phone\",\n      onChange: e => setPhone(e.target.value),\n      minLength: 9,\n      maxLength: 13,\n      pattern: \"[0-9+]*\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      placeholder: \"Email\",\n      onChange: e => setEmail(e.target.value.toLowerCase()),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ContactForm","_ref","name","setName","phone","setPhone","email","setEmail","handleSubmit","onSubmit","children","type","value","placeholder","onChange","e","target","toLowerCase","words","split","i","length","toUpperCase","substr","undefined","join","required","fileName","_jsxFileName","lineNumber","columnNumber","minLength","maxLength","pattern","_c","$RefreshReg$"],"sources":["/Users/christopherrau/appointment planner/appointment-planner/src/components/contactForm/ContactForm.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactForm = ({ name, setName, phone, setPhone, email, setEmail, handleSubmit }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type='text'\r\n        value={name}\r\n        placeholder={\"Name\"}\r\n        onChange={(e) => {\r\n          let name = e.target.value.toLowerCase();\r\n          const words = name.split(\" \");\r\n\r\n          for (let i = 0; i < words.length; i++) {\r\n            if (words[i]) {\r\n              words[i] = words[i] = words[i][0].toUpperCase() + words[i].substr(1 | undefined);\r\n            }\r\n          }\r\n          name = words.join(\" \");\r\n          setName(name);\r\n        }}\r\n        required\r\n      />\r\n      <input\r\n        type='tel'\r\n        value={phone}\r\n        placeholder={\"Phone\"}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n        minLength={9}\r\n        maxLength={13}\r\n        pattern='[0-9+]*'\r\n        required\r\n      />\r\n      <input\r\n        type='email'\r\n        value={email}\r\n        placeholder={\"Email\"}\r\n        onChange={(e) => setEmail(e.target.value.toLowerCase())}\r\n        required\r\n      />\r\n      <input\r\n        type='submit'\r\n        value='Submit'\r\n      />\r\n    </form>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,GAAGC,IAAA,IAAuE;EAAA,IAAtE;IAAEC,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAP,IAAA;EAC3F,oBACEF,OAAA;IAAMU,QAAQ,EAAED,YAAa;IAAAE,QAAA,gBAC3BX,OAAA;MACEY,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEV,IAAK;MACZW,WAAW,EAAE,MAAO;MACpBC,QAAQ,EAAGC,CAAC,IAAK;QACf,IAAIb,IAAI,GAAGa,CAAC,CAACC,MAAM,CAACJ,KAAK,CAACK,WAAW,EAAE;QACvC,MAAMC,KAAK,GAAGhB,IAAI,CAACiB,KAAK,CAAC,GAAG,CAAC;QAE7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;UACrC,IAAIF,KAAK,CAACE,CAAC,CAAC,EAAE;YACZF,KAAK,CAACE,CAAC,CAAC,GAAGF,KAAK,CAACE,CAAC,CAAC,GAAGF,KAAK,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE,GAAGJ,KAAK,CAACE,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,GAAGC,SAAS,CAAC;UAClF;QACF;QACAtB,IAAI,GAAGgB,KAAK,CAACO,IAAI,CAAC,GAAG,CAAC;QACtBtB,OAAO,CAACD,IAAI,CAAC;MACf,CAAE;MACFwB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACF/B,OAAA;MACEY,IAAI,EAAC,KAAK;MACVC,KAAK,EAAER,KAAM;MACbS,WAAW,EAAE,OAAQ;MACrBC,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;MAC1CmB,SAAS,EAAE,CAAE;MACbC,SAAS,EAAE,EAAG;MACdC,OAAO,EAAC,SAAS;MACjBP,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACF/B,OAAA;MACEY,IAAI,EAAC,OAAO;MACZC,KAAK,EAAEN,KAAM;MACbO,WAAW,EAAE,OAAQ;MACrBC,QAAQ,EAAGC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACJ,KAAK,CAACK,WAAW,EAAE,CAAE;MACxDS,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACF/B,OAAA;MACEY,IAAI,EAAC,QAAQ;MACbC,KAAK,EAAC;IAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEX,CAAC;AAACI,EAAA,GA5CWlC,WAAW;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}